/home/docker> docker container run -d --name w1 alpine-apache
aa9a109bcbad771cdf41cf540f0c4b4b71099374db71ec8439dd32c91b25b6fc
/home/docker> docker container run -d --name w2 alpine-apache
5b30130afd3c4d220cf7b5016526e03f9d4d0938fa6654b7a9ff3388169ddb57
/home/docker> docker container run -d --name w3 alpine-apache
ec4cc39226167884a45ba3c4e6aa3e06eb0b260478f70898ce23bb358b119cd4
/home/docker> docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.14",
                    "IPAddress": "172.17.0.14",
/home/docker> docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.15",
                    "IPAddress": "172.17.0.15",
/home/docker> docker container inspect w3 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.16",
                    "IPAddress": "172.17.0.16",
/home/docker> docker container exec w1 ping -c2 "172.17.0.15"
PING 172.17.0.15 (172.17.0.15): 56 data bytes
64 bytes from 172.17.0.15: seq=0 ttl=64 time=0.211 ms
64 bytes from 172.17.0.15: seq=1 ttl=64 time=0.254 ms

--- 172.17.0.15 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.211/0.232/0.254 ms
/home/docker> docker container exec w3 ping -c2 "172.17.0.15"
PING 172.17.0.15 (172.17.0.15): 56 data bytes
64 bytes from 172.17.0.15: seq=0 ttl=64 time=0.206 ms
64 bytes from 172.17.0.15: seq=1 ttl=64 time=0.098 ms

--- 172.17.0.15 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.098/0.152/0.206 ms
/home/docker> docker container exec w3 ping -c2 "172.17.0.14"
PING 172.17.0.14 (172.17.0.14): 56 data bytes
64 bytes from 172.17.0.14: seq=0 ttl=64 time=0.429 ms
64 bytes from 172.17.0.14: seq=1 ttl=64 time=0.096 ms

--- 172.17.0.14 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.096/0.262/0.429 ms
/home/docker> docker container inspect w1 | tail -n 30
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "973854eea9dfb9df5705fe8e28b5d6749caf8471d91d5413a4246566ed83c702",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.14",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:0e",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "c83a8ca561aa2560e050b81f7563152bdf97abdda109bbc7abe52d856321ecaa",
                    "EndpointID": "973854eea9dfb9df5705fe8e28b5d6749caf8471d91d5413a4246566ed83c702",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.14",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:0e",
                    "DriverOpts": null
                }
            }
        }
    }
]
/home/docker> docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
c83a8ca561aa        bridge              bridge              local
f09381e2f190        host                host                local
9cce334a36a7        none                null                local
/home/docker> docker network inspect bridge
[
    {
        "Name": "bridge",
        "Id": "c83a8ca561aa2560e050b81f7563152bdf97abdda109bbc7abe52d856321ecaa",
        "Created": "2019-05-15T04:11:31.040223075Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": null,
            "Config": [
                {
                    "Subnet": "172.17.0.0/16",
                    "Gateway": "172.17.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Ingress": false,
        "ConfigFrom": {
            "Network": ""
        },
        "ConfigOnly": false,
        "Containers": {
            "1a8e77f4d2759bdf03466c8f8c9d316fd4d612637061f14f532552994b89da43": {
                "Name": "k8s_POD_nginx-ingress-controller-zjd74_kube-system_ab42b3da-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "4e4adf3d326109359d00b4e30a9f60b2d72ab6297f7078cd03aed0d211ded264",
                "MacAddress": "02:42:ac:11:00:04",
                "IPv4Address": "172.17.0.4/16",
                "IPv6Address": ""
            },
            "261d981fe0c546f741763d61fcec710ec3eac5d432ba3d78644a1dabd230cc3a": {
                "Name": "k8s_POD_monitoring-influxdb-66946c9f58-h5lhw_kube-system_abf955f0-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "6daa6c9832d68a51cc1c4c84b81b7c57fb0788c06ee03e6e2602ac167fba4edf",
                "MacAddress": "02:42:ac:11:00:09",
                "IPv4Address": "172.17.0.9/16",
                "IPv6Address": ""
            },
            "5b30130afd3c4d220cf7b5016526e03f9d4d0938fa6654b7a9ff3388169ddb57": {
                "Name": "w2",
                "EndpointID": "a9e62271ae8284922f59fc5a55fea47eb4de76ad016a2e2704e51d8028ea99dc",
                "MacAddress": "02:42:ac:11:00:0f",
                "IPv4Address": "172.17.0.15/16",
                "IPv6Address": ""
            },
            "61fb1c100681428318792322c005bb817c3fdbbcf9bd81c1f123bab2643aba9d": {
                "Name": "k8s_POD_kube-dns-54cccfbdf8-f5fbr_kube-system_aba5849a-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "7bcfabc0c39c38f8e160ce662979192825f6543f3203f9838a36b1d07e0340df",
                "MacAddress": "02:42:ac:11:00:06",
                "IPv4Address": "172.17.0.6/16",
                "IPv6Address": ""
            },
            "65af5f78cdb94e39339eaa686dfba2cda2b40e4a27e9411bc7e2d6cecc4ad4cd": {
                "Name": "k8s_POD_heapster-xnbjb_kube-system_aafb3c7c-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "d2b6dd3e422dc98cebfd4bc05bc89ce47ef6d83529584c0b9b3ed526122d1631",
                "MacAddress": "02:42:ac:11:00:08",
                "IPv4Address": "172.17.0.8/16",
                "IPv6Address": ""
            },
            "8a9fa20b479335b107dada76dadfb6fa1f3e9d37ff033ec0238fa590a082ca79": {
                "Name": "k8s_POD_heapster-546c9964c6-2w8ld_kube-system_ac314ae9-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "bba8180d4ee35fb342646df6e8b59dacff8d54f0a15541bedd216dbd73b0ffce",
                "MacAddress": "02:42:ac:11:00:05",
                "IPv4Address": "172.17.0.5/16",
                "IPv6Address": ""
            },
            "9b864511740a85a4aadc932f0cf0c0779b30266e10b508200672b132eb4dd2d6": {
                "Name": "k8s_POD_prometheus-deployment-79c7cf44fc-8bjw9_monitoring_39df4192-46df-11e9-8cd8-080027326ca6_25",
                "EndpointID": "7dce0409274cad5f4fe6cb5c11e583aebf6fa302266a625c8d68caa5bef0be33",
                "MacAddress": "02:42:ac:11:00:07",
                "IPv4Address": "172.17.0.7/16",
                "IPv6Address": ""
            },
            "aa9a109bcbad771cdf41cf540f0c4b4b71099374db71ec8439dd32c91b25b6fc": {
                "Name": "w1",
                "EndpointID": "973854eea9dfb9df5705fe8e28b5d6749caf8471d91d5413a4246566ed83c702",
                "MacAddress": "02:42:ac:11:00:0e",
                "IPv4Address": "172.17.0.14/16",
                "IPv6Address": ""
            },
            "ad1884ef93a8dcf51cffe00e237d9f387f320c83680dac1f588b38deaac80a95": {
                "Name": "k8s_POD_monitoring-grafana-65757b9656-h4fbs_kube-system_abcaee65-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "80928b65f63f7e8a245f69c2c20ff4215163be77001f8cc37b3ada368fa7bf8f",
                "MacAddress": "02:42:ac:11:00:0c",
                "IPv4Address": "172.17.0.12/16",
                "IPv6Address": ""
            },
            "c61e8e9de4e77800415584517867eebc43bc0a2142f8562368e9c5a5bea1587c": {
                "Name": "k8s_POD_influxdb-grafana-tx55c_kube-system_ab1bc183-2f94-11e9-8d17-080027326ca6_52",
                "EndpointID": "b63dd19db63b6940205d5e92ec6455a24226964f03b8c9aaa95f3b358ca6e9b0",
                "MacAddress": "02:42:ac:11:00:0b",
                "IPv4Address": "172.17.0.11/16",
                "IPv6Address": ""
            },
            "cd59defe8b70431eea3f688e229156c1e7146f75ad35a0b73a616298ab0aca09": {
                "Name": "k8s_POD_default-http-backend-cvzhd_kube-system_ab6b020b-2f94-11e9-8d17-080027326ca6_53",
                "EndpointID": "9570ae6f7182f5fc23fe6b203623b51d85a303387613f4706fc7974e7a0eb737",
                "MacAddress": "02:42:ac:11:00:0d",
                "IPv4Address": "172.17.0.13/16",
                "IPv6Address": ""
            },
            "cd92e831a22d60997eeb70659e52a2050398bc5f58b3ad3684656b15cf2c9c0d": {
                "Name": "k8s_POD_tiller-deploy-5b7c59888b-6rbgl_kube-system_42cc5a34-3c10-11e9-a9d7-080027326ca6_44",
                "EndpointID": "041f21165bc5f913ad08ac6342f1904726cd7802c676bc1c802a851117dc07bf",
                "MacAddress": "02:42:ac:11:00:0a",
                "IPv4Address": "172.17.0.10/16",
                "IPv6Address": ""
            },
            "e5eb90e275c0b2827fe9cc13e6eb211e61560f00a712b0c46a6a026d01423778": {
                "Name": "k8s_POD_metrics-server-bb9ffc6b8-c4bsh_kube-system_ac742fe8-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "a6033246aeca1f767600343ea077972bbf35d768049494474995e05882e5b1bb",
                "MacAddress": "02:42:ac:11:00:03",
                "IPv4Address": "172.17.0.3/16",
                "IPv6Address": ""
            },
            "ec4cc39226167884a45ba3c4e6aa3e06eb0b260478f70898ce23bb358b119cd4": {
                "Name": "w3",
                "EndpointID": "3869ce7d95e46f81b0d82616e7c3dd7e3ccafeec93dfd25dc2cb765ac34748e3",
                "MacAddress": "02:42:ac:11:00:10",
                "IPv4Address": "172.17.0.16/16",
                "IPv6Address": ""
            },
            "fad86586baaf83752ecdd19332dee39f7dcdcb5db93bff278dfad293b7bb6f64": {
                "Name": "k8s_POD_kubernetes-dashboard-77d8b98585-9cffv_kube-system_aae2ad11-2f94-11e9-8d17-080027326ca6_51",
                "EndpointID": "e6b63a0ad65002f7002eaaf6580c32405b809ff4131fde06e5f418054d938a5e",
                "MacAddress": "02:42:ac:11:00:02",
                "IPv4Address": "172.17.0.2/16",
                "IPv6Address": ""
            }
        },
        "Options": {
            "com.docker.network.bridge.default_bridge": "true",
            "com.docker.network.bridge.enable_icc": "true",
            "com.docker.network.bridge.enable_ip_masquerade": "true",
            "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
            "com.docker.network.bridge.name": "docker0",
            "com.docker.network.driver.mtu": "1500"
        },
        "Labels": {}
    }
]
/home/docker>
/home/docker> docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
c83a8ca561aa        bridge              bridge              local
f09381e2f190        host                host                local
9cce334a36a7        none                null                local
/home/docker> docker network create w1-w2-net
bd1e3c3d99b63b5c9b9f60ceeb351830df088c11933db571bb01dc3e7e488c91
/home/docker> docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
c83a8ca561aa        bridge              bridge              local
f09381e2f190        host                host                local
9cce334a36a7        none                null                local
bd1e3c3d99b6        w1-w2-net           bridge              local
/home/docker> docker network inspect w1-w2-net
[
    {
        "Name": "w1-w2-net",
        "Id": "bd1e3c3d99b63b5c9b9f60ceeb351830df088c11933db571bb01dc3e7e488c91",
        "Created": "2019-05-15T04:34:00.261682026Z",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.18.0.0/16",
                    "Gateway": "172.18.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Ingress": false,
        "ConfigFrom": {
            "Network": ""
        },
        "ConfigOnly": false,
        "Containers": {},
        "Options": {},
        "Labels": {}
    }
]
/home/docker>
/home/docker> docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.14",
                    "IPAddress": "172.17.0.14",
/home/docker> docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.15",
                    "IPAddress": "172.17.0.15",
/home/docker> docker network disconnect bridge w1
/home/docker> docker network disconnect bridge w2
/home/docker> docker network connect w1-w2-net w1
/home/docker> docker network connect w1-w2-net w2
/home/docker> docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.18.0.2",
/home/docker> docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.18.0.3",
/home/docker> docker container exec w1 ping -c2 "172.18.0.3"
PING 172.18.0.3 (172.18.0.3): 56 data bytes
64 bytes from 172.18.0.3: seq=0 ttl=64 time=0.113 ms
64 bytes from 172.18.0.3: seq=1 ttl=64 time=0.102 ms

--- 172.18.0.3 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.102/0.107/0.113 ms
/home/docker>
/home/docker> docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.18.0.3",
/home/docker> docker container inspect w3 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.16",
                    "IPAddress": "172.17.0.16",
/home/docker> docker network create w2-w3-net
e668d50c345def6ec4e63ac34f558c6300cfdc68ab842c351c15d8dcc9b1cf63
/home/docker> docker network disconnect bridge w3
/home/docker> docker network connect w2-w3-net w3
/home/docker> docker container inspect w3 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.2",
/home/docker> docker network connect w2-w3-net w2
/home/docker> docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.18.0.3",
                    "IPAddress": "172.19.0.3",
/home/docker>
/home/docker> docker container inspect w1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.18.0.2",
/home/docker> docker container inspect w2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.18.0.3",
                    "IPAddress": "172.19.0.3",
/home/docker> docker container inspect w3 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "172.19.0.2",
/home/docker> docker container exec w1 ping -c2 w2
PING w2 (172.18.0.3): 56 data bytes
64 bytes from 172.18.0.3: seq=0 ttl=64 time=0.073 ms
64 bytes from 172.18.0.3: seq=1 ttl=64 time=0.132 ms

--- w2 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.073/0.102/0.132 ms
/home/docker> docker container exec w3 ping -c2 w2
PING w2 (172.19.0.3): 56 data bytes
64 bytes from 172.19.0.3: seq=0 ttl=64 time=0.124 ms
64 bytes from 172.19.0.3: seq=1 ttl=64 time=0.113 ms

--- w2 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.113/0.118/0.124 ms
/home/docker> docker container exec w3 ping -c2 w1
ping: bad address 'w1'
/home/docker>



-----------------------------------------------------------------------------------------------------
KUBERNETES
-----------------------------------------------------------------------------------------------------

λ kubectl version
Client Version: version.Info{Major:"1", Minor:"9", GitVersion:"v1.9.0", GitCommit:"925c127ec6b946659ad0fd596fa959be43f0cc05", GitTreeState:"clean", BuildDate:"2017-12-15T21:07:38Z", GoVersion:"go1.9.2", Compiler:"gc", Platform:"windows/amd64"}
Server Version: version.Info{Major:"", Minor:"", GitVersion:"v1.9.0", GitCommit:"925c127ec6b946659ad0fd596fa959be43f0cc05", GitTreeState:"clean", BuildDate:"2018-01-26T19:04:38Z", GoVersion:"go1.9.1", Compiler:"gc", Platform:"linux/amd64"}
Dell lap@Dell ~
λ kubectl config get-contexts
CURRENT   NAME                          CLUSTER      AUTHINFO           NAMESPACE
          kubernetes-admin@kubernetes   kubernetes   kubernetes-admin
*         minikube                      minikube     minikube
Dell lap@Dell ~
λ
Dell lap@Dell ~
λ cd docker-workshop/may13/k8s/pod/
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ ls
pod-helloworld.yml
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl get pod
No resources found.
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl get pods
No resources found.
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl get po
No resources found.
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ ls
pod-helloworld.yml
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl apply -f pod-helloworld.yml
pod "my-nginx" created
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl get pods
NAME       READY     STATUS    RESTARTS   AGE
my-nginx   1/1       Running   0          2m
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl describe pod my-nginx
Name:         my-nginx
Namespace:    default
Node:         minikube/192.168.99.127
Start Time:   Wed, 15 May 2019 14:09:12 +0530
Labels:       app=helloworld
Annotations:  kubectl.kubernetes.io/last-applied-configuration={"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"helloworld"},"name":"my-nginx","namespace":"default"},"spec":{"containers...
Status:       Running
IP:           172.17.0.14
Containers:
  nginx:
    Container ID:   docker://7921e7942fb2f01fe9fa6b5548f547f0d86040c0d2deb2a6484d0cea028d3879
    Image:          nginx:alpine
    Image ID:       docker-pullable://nginx@sha256:57a226fb6ab6823027c0704a9346a890ffb0cacde06bc19bbc234c8720673555
    Port:           80/TCP
    State:          Running
      Started:      Wed, 15 May 2019 14:09:26 +0530
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-448nd (ro)
Conditions:
  Type           Status
  Initialized    True
  Ready          True
  PodScheduled   True
Volumes:
  default-token-448nd:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-448nd
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     <none>
Events:
  Type    Reason                 Age   From               Message
  ----    ------                 ----  ----               -------
  Normal  Scheduled              3m    default-scheduler  Successfully assigned my-nginx to minikube
  Normal  SuccessfulMountVolume  3m    kubelet, minikube  MountVolume.SetUp succeeded for volume "default-token-448nd"
  Normal  Pulling                3m    kubelet, minikube  pulling image "nginx:alpine"
  Normal  Pulled                 3m    kubelet, minikube  Successfully pulled image "nginx:alpine"
  Normal  Created                3m    kubelet, minikube  Created container
  Normal  Started                3m    kubelet, minikube  Started container
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl get pods
NAME       READY     STATUS    RESTARTS   AGE
my-nginx   1/1       Running   0          5m
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ #kubectl delete pod my-nginx
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ kubectl delete -f pod-helloworld.yml
pod "my-nginx" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s/pod
λ


Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl apply -f rc-helloworld.yml
replicationcontroller "helloworld-controller" created
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get replicationcontroller
NAME                    DESIRED   CURRENT   READY     AGE
helloworld-controller   2         2         2         30s
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get rc
NAME                    DESIRED   CURRENT   READY     AGE
helloworld-controller   2         2         2         36s
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods
NAME                          READY     STATUS    RESTARTS   AGE
helloworld-controller-fczrp   1/1       Running   0          2m
helloworld-controller-jzhx5   1/1       Running   0          2m
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods -o wide
NAME                          READY     STATUS    RESTARTS   AGE       IP            NODE
helloworld-controller-fczrp   1/1       Running   0          4m        172.17.0.15   minikube
helloworld-controller-jzhx5   1/1       Running   0          4m        172.17.0.14   minikube
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl delete pod helloworld-controller-fczrp
pod "helloworld-controller-fczrp" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods -o wide
NAME                          READY     STATUS    RESTARTS   AGE       IP            NODE
helloworld-controller-jzhx5   1/1       Running   0          5m        172.17.0.14   minikube
helloworld-controller-xw4wn   1/1       Running   0          19s       172.17.0.15   minikube
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl scale rc helloworld-controller --replicas 5
replicationcontroller "helloworld-controller" scaled
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods -o wide
NAME                          READY     STATUS              RESTARTS   AGE       IP            NODE
helloworld-controller-gn8p8   0/1       ContainerCreating   0          4s        <none>        minikube
helloworld-controller-h4ssg   0/1       ContainerCreating   0          4s        <none>        minikube
helloworld-controller-jn75k   1/1       Running             0          4s        172.17.0.17   minikube
helloworld-controller-jzhx5   1/1       Running             0          8m        172.17.0.14   minikube
helloworld-controller-xw4wn   1/1       Running             0          2m        172.17.0.15   minikube
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods -o wide
NAME                          READY     STATUS    RESTARTS   AGE       IP            NODE
helloworld-controller-gn8p8   1/1       Running   0          33s       172.17.0.16   minikube
helloworld-controller-h4ssg   1/1       Running   0          33s       172.17.0.18   minikube
helloworld-controller-jn75k   1/1       Running   0          33s       172.17.0.17   minikube
helloworld-controller-jzhx5   1/1       Running   0          8m        172.17.0.14   minikube
helloworld-controller-xw4wn   1/1       Running   0          2m        172.17.0.15   minikube
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl scale rc helloworld-controller --replicas 2
replicationcontroller "helloworld-controller" scaled
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods -o wide
NAME                          READY     STATUS        RESTARTS   AGE       IP            NODE
helloworld-controller-gn8p8   0/1       Terminating   0          1m        172.17.0.16   minikube
helloworld-controller-h4ssg   0/1       Terminating   0          1m        172.17.0.18   minikube
helloworld-controller-jn75k   0/1       Terminating   0          1m        172.17.0.17   minikube
helloworld-controller-jzhx5   1/1       Running       0          9m        172.17.0.14   minikube
helloworld-controller-xw4wn   1/1       Running       0          3m        172.17.0.15   minikube
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods -o wide
NAME                          READY     STATUS    RESTARTS   AGE       IP            NODE
helloworld-controller-jzhx5   1/1       Running   0          9m        172.17.0.14   minikube
helloworld-controller-xw4wn   1/1       Running   0          3m        172.17.0.15   minikube
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods --show-labels
NAME                          READY     STATUS    RESTARTS   AGE       LABELS
helloworld-controller-jzhx5   1/1       Running   0          15m       app=helloworld
helloworld-controller-xw4wn   1/1       Running   0          10m       app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl delete pod helloworld-controller-jzhx5
pod "helloworld-controller-jzhx5" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods --show-labels
NAME                          READY     STATUS    RESTARTS   AGE       LABELS
helloworld-controller-tzk6b   1/1       Running   0          4s        app=helloworld
helloworld-controller-xw4wn   1/1       Running   0          11m       app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl delete rc helloworld-controller
replicationcontroller "helloworld-controller" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods --show-labels
NAME                          READY     STATUS        RESTARTS   AGE       LABELS
helloworld-controller-tzk6b   0/1       Terminating   0          1m        app=helloworld
helloworld-controller-xw4wn   0/1       Terminating   0          12m       app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods --show-labels
NAME                          READY     STATUS        RESTARTS   AGE       LABELS
helloworld-controller-tzk6b   0/1       Terminating   0          1m        app=helloworld
helloworld-controller-xw4wn   0/1       Terminating   0          12m       app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods --show-labels
No resources found.
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ kubectl get pods --show-labels
No resources found.
Dell lap@Dell ~/docker-workshop/may13/k8s/rc
λ cd ..
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl apply -f pod/pod-helloworld.yml
pod "my-nginx" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods --show-labels
NAME       READY     STATUS    RESTARTS   AGE       LABELS
my-nginx   1/1       Running   0          6s        app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl apply -f rc/rc-helloworld.yml
replicationcontroller "helloworld-controller" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods --show-labels
NAME                          READY     STATUS    RESTARTS   AGE       LABELS
helloworld-controller-6pm44   1/1       Running   0          25s       app=helloworld
my-nginx                      1/1       Running   0          59s       app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete pod my-nginx
pod "my-nginx" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods --show-labels
NAME                          READY     STATUS        RESTARTS   AGE       LABELS
helloworld-controller-6pm44   1/1       Running       0          2m        app=helloworld
helloworld-controller-wvq6p   1/1       Running       0          4s        app=helloworld
my-nginx                      0/1       Terminating   0          2m        app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete -f rc/rc-helloworld.yml
replicationcontroller "helloworld-controller" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods --show-labels
NAME                          READY     STATUS        RESTARTS   AGE       LABELS
helloworld-controller-wvq6p   0/1       Terminating   0          18m       app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s
λ
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl create -f dep/dep-helloworld.yml
deployment "helloworld-dep" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get deployments
NAME             DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
helloworld-dep   1         1         1            1           13s
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get deploy
NAME             DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
helloworld-dep   1         1         1            1           16s
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get rs
NAME                        DESIRED   CURRENT   READY     AGE
helloworld-dep-765746cb75   1         1         1         1m
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods
NAME                              READY     STATUS    RESTARTS   AGE
helloworld-dep-765746cb75-kjpvd   1/1       Running   0          1m
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl scale deploy helloworld-dep --replicas 5
deployment "helloworld-dep" scaled
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods
NAME                              READY     STATUS              RESTARTS   AGE
helloworld-dep-765746cb75-5ssqw   0/1       ContainerCreating   0          5s
helloworld-dep-765746cb75-cwzk4   0/1       ContainerCreating   0          5s
helloworld-dep-765746cb75-dslm7   0/1       ContainerCreating   0          5s
helloworld-dep-765746cb75-kcrk8   0/1       ContainerCreating   0          5s
helloworld-dep-765746cb75-kjpvd   1/1       Running             0          2m
Dell lap@Dell ~/docker-workshop/may13/k8s
λ
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods
NAME                              READY     STATUS    RESTARTS   AGE
helloworld-dep-765746cb75-5ssqw   1/1       Running   0          1m
helloworld-dep-765746cb75-cwzk4   1/1       Running   0          1m
helloworld-dep-765746cb75-dslm7   1/1       Running   0          1m
helloworld-dep-765746cb75-kcrk8   1/1       Running   0          1m
helloworld-dep-765746cb75-kjpvd   1/1       Running   0          3m
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl scale deploy helloworld-dep --replicas 10
deployment "helloworld-dep" scaled
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods
NAME                              READY     STATUS              RESTARTS   AGE
helloworld-dep-765746cb75-2hfvh   1/1       Running             0          15s
helloworld-dep-765746cb75-2nvv7   0/1       ContainerCreating   0          15s
helloworld-dep-765746cb75-4qjpc   0/1       ContainerCreating   0          15s
helloworld-dep-765746cb75-5ssqw   1/1       Running             0          1m
helloworld-dep-765746cb75-6hsnt   0/1       ContainerCreating   0          15s
helloworld-dep-765746cb75-cwzk4   1/1       Running             0          1m
helloworld-dep-765746cb75-dslm7   1/1       Running             0          1m
helloworld-dep-765746cb75-kcrk8   1/1       Running             0          1m
helloworld-dep-765746cb75-kjpvd   1/1       Running             0          4m
helloworld-dep-765746cb75-mq9km   1/1       Running             0          15s
Dell lap@Dell ~/docker-workshop/may13/k8s
λ
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl rollout status deploy helloworld-dep
deployment "helloworld-dep" successfully rolled out
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl set image deploy helloworld-dep web=nginx:alpine
deployment "helloworld-dep" image updated
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl rollout status deploy helloworld-dep
Waiting for rollout to finish: 2 out of 10 new replicas have been updated...
Waiting for rollout to finish: 2 out of 10 new replicas have been updated...
Waiting for rollout to finish: 2 out of 10 new replicas have been updated...
Waiting for rollout to finish: 2 out of 10 new replicas have been updated...
Waiting for rollout to finish: 3 out of 10 new replicas have been updated...
Waiting for rollout to finish: 3 out of 10 new replicas have been updated...
Waiting for rollout to finish: 3 out of 10 new replicas have been updated...
Waiting for rollout to finish: 3 out of 10 new replicas have been updated...
Waiting for rollout to finish: 3 out of 10 new replicas have been updated...
Waiting for rollout to finish: 4 out of 10 new replicas have been updated...
Waiting for rollout to finish: 4 out of 10 new replicas have been updated...
Waiting for rollout to finish: 4 out of 10 new replicas have been updated...
Waiting for rollout to finish: 5 out of 10 new replicas have been updated...
Waiting for rollout to finish: 5 out of 10 new replicas have been updated...
Waiting for rollout to finish: 5 out of 10 new replicas have been updated...
Waiting for rollout to finish: 5 out of 10 new replicas have been updated...
Waiting for rollout to finish: 5 out of 10 new replicas have been updated...
Waiting for rollout to finish: 6 out of 10 new replicas have been updated...
Waiting for rollout to finish: 6 out of 10 new replicas have been updated...
Waiting for rollout to finish: 6 out of 10 new replicas have been updated...
Waiting for rollout to finish: 7 out of 10 new replicas have been updated...
Waiting for rollout to finish: 7 out of 10 new replicas have been updated...
Waiting for rollout to finish: 7 out of 10 new replicas have been updated...
Waiting for rollout to finish: 7 out of 10 new replicas have been updated...
Waiting for rollout to finish: 8 out of 10 new replicas have been updated...
Waiting for rollout to finish: 8 out of 10 new replicas have been updated...
Waiting for rollout to finish: 9 out of 10 new replicas have been updated...
Waiting for rollout to finish: 9 out of 10 new replicas have been updated...
Waiting for rollout to finish: 9 out of 10 new replicas have been updated...
Waiting for rollout to finish: 1 old replicas are pending termination...
Waiting for rollout to finish: 1 old replicas are pending termination...
Waiting for rollout to finish: 1 old replicas are pending termination...
Waiting for rollout to finish: 9 of 10 updated replicas are available...
deployment "helloworld-dep" successfully rolled out
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods
NAME                              READY     STATUS    RESTARTS   AGE
helloworld-dep-7d87768ff8-2nq9h   1/1       Running   0          30s
helloworld-dep-7d87768ff8-64668   1/1       Running   0          1m
helloworld-dep-7d87768ff8-6gjqx   1/1       Running   0          27s
helloworld-dep-7d87768ff8-c75rd   1/1       Running   0          22s
helloworld-dep-7d87768ff8-dk6jz   1/1       Running   0          36s
helloworld-dep-7d87768ff8-n8rzq   1/1       Running   0          43s
helloworld-dep-7d87768ff8-prshl   1/1       Running   0          53s
helloworld-dep-7d87768ff8-qctt4   1/1       Running   0          49s
helloworld-dep-7d87768ff8-sznjj   1/1       Running   0          1m
helloworld-dep-7d87768ff8-z68xc   1/1       Running   0          1m
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get deploy helloworld-dep -o yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: 2019-05-15T11:05:56Z
  generation: 4
  labels:
    app: helloworld
  name: helloworld-dep
  namespace: default
  resourceVersion: "1711005"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/helloworld-dep
  uid: 69ae985a-7701-11e9-b612-080027326ca6
spec:
  replicas: 10
  selector:
    matchLabels:
      app: helloworld
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: helloworld
    spec:
      containers:
      - image: nginx:alpine
        imagePullPolicy: Always
        name: web
        ports:
        - containerPort: 80
          name: nginxport
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 10
  conditions:
  - lastTransitionTime: 2019-05-15T11:10:17Z
    lastUpdateTime: 2019-05-15T11:10:17Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 4
  readyReplicas: 10
  replicas: 10
  updatedReplicas: 10
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods
NAME                              READY     STATUS    RESTARTS   AGE
helloworld-dep-7d87768ff8-2nq9h   1/1       Running   0          8m
helloworld-dep-7d87768ff8-64668   1/1       Running   0          9m
helloworld-dep-7d87768ff8-6gjqx   1/1       Running   0          8m
helloworld-dep-7d87768ff8-c75rd   1/1       Running   0          8m
helloworld-dep-7d87768ff8-dk6jz   1/1       Running   0          8m
helloworld-dep-7d87768ff8-n8rzq   1/1       Running   0          9m
helloworld-dep-7d87768ff8-prshl   1/1       Running   0          9m
helloworld-dep-7d87768ff8-qctt4   1/1       Running   0          9m
helloworld-dep-7d87768ff8-sznjj   1/1       Running   0          9m
helloworld-dep-7d87768ff8-z68xc   1/1       Running   0          9m
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods --show-labels
NAME                              READY     STATUS    RESTARTS   AGE       LABELS
helloworld-dep-7d87768ff8-2nq9h   1/1       Running   0          8m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-64668   1/1       Running   0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-6gjqx   1/1       Running   0          8m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-c75rd   1/1       Running   0          8m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-dk6jz   1/1       Running   0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-n8rzq   1/1       Running   0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-prshl   1/1       Running   0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-qctt4   1/1       Running   0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-sznjj   1/1       Running   0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-z68xc   1/1       Running   0          9m        app=helloworld,pod-template-hash=3843324994
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl apply -f pod/pod-helloworld.yml
pod "my-nginx" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl get pods --show-labels
NAME                              READY     STATUS              RESTARTS   AGE       LABELS
helloworld-dep-7d87768ff8-2nq9h   1/1       Running             0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-64668   1/1       Running             0          10m       app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-6gjqx   1/1       Running             0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-c75rd   1/1       Running             0          9m        app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-dk6jz   1/1       Running             0          10m       app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-n8rzq   1/1       Running             0          10m       app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-prshl   1/1       Running             0          10m       app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-qctt4   1/1       Running             0          10m       app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-sznjj   1/1       Running             0          10m       app=helloworld,pod-template-hash=3843324994
helloworld-dep-7d87768ff8-z68xc   1/1       Running             0          10m       app=helloworld,pod-template-hash=3843324994
my-nginx                          0/1       ContainerCreating   0          5s        app=helloworld
Dell lap@Dell ~/docker-workshop/may13/k8s
λ
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete deployment helloworl-dep
Error from server (NotFound): deployments.extensions "helloworl-dep" not found
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete deployment helloworld-dep
deployment "helloworld-dep" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s
λ
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl create -f dep/dep-helloworld.yml
deployment "helloworld-dep" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl create -f dep/dep-helloworld.yml
Error from server (AlreadyExists): error when creating "dep/dep-helloworld.yml": deployments.extensions "helloworld-dep" already exists
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete -f dep/dep-helloworld.yml
deployment "helloworld-dep" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl create -f dep/dep-helloworld.yml
deployment "helloworld-dep" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete -f dep/dep-helloworld.yml
deployment "helloworld-dep" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl apply -f dep/dep-helloworld.yml
deployment "helloworld-dep" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl apply -f dep/dep-helloworld.yml
deployment "helloworld-dep" unchanged
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl apply -f dep/dep-helloworld.yml
deployment "helloworld-dep" configured
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete -f dep/dep-helloworld.yml
deployment "helloworld-dep" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl create -f dep/dep-helloworld.yml
deployment "helloworld-dep" created
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl apply -f dep/dep-helloworld.yml
Warning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply
deployment "helloworld-dep" configured
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl delete -f dep/dep-helloworld.yml
deployment "helloworld-dep" deleted
Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl --help | grep api
  api-versions   Print the supported API versions on the server, in the form of "group/version" Dell lap@Dell ~/docker-workshop/may13/k8s
λ kubectl api-versions
admissionregistration.k8s.io/v1alpha1
admissionregistration.k8s.io/v1beta1
apiextensions.k8s.io/v1beta1
apiregistration.k8s.io/v1beta1
apps/v1
apps/v1beta1
apps/v1beta2
authentication.k8s.io/v1
authentication.k8s.io/v1beta1
authorization.k8s.io/v1
authorization.k8s.io/v1beta1
autoscaling/v1
autoscaling/v2beta1
batch/v1
batch/v1beta1
batch/v2alpha1
certificates.k8s.io/v1beta1
events.k8s.io/v1beta1
extensions/v1beta1
metrics.k8s.io/v1beta1
networking.k8s.io/v1
policy/v1beta1
rbac.authorization.k8s.io/v1
rbac.authorization.k8s.io/v1alpha1
rbac.authorization.k8s.io/v1beta1
scheduling.k8s.io/v1alpha1
settings.k8s.io/v1alpha1
storage.k8s.io/v1
storage.k8s.io/v1alpha1
storage.k8s.io/v1beta1
v1
Dell lap@Dell ~/docker-workshop/may13/k8s
λ
